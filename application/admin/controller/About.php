<?php/** * Created by PhpStorm. * User: Administrator * Date: 2019/7/22 * Time: 14:48 */namespace app\admin\controller;use think\Request;use think\Db;class About extends Base{    //列表页显示    public function index()    {        return $this->fetch();    }    //轮播图列表    public function imglist(Request $request)    {        try {            $data=[];            if ($request->param('id')) {                $data[] = ['id', '=', $request->param('id')];            }            if ($request->param('about_title')) {                $about_title = $request->param('about_title');                $data[] = ['about_title', 'like', "%$about_title%"];            }            if ($request->param('about_views')) {                $data[] = ['about_views', '=', $request->param('about_views')];            }            $info = Db::table('kit_about')->where($data)->order('id desc')->field('id,about_pic,about_title,about_content,about_views')->paginate            ($request->param('limit'));            $lists = [];            foreach($info->toArray()['data'] as $v){                if($v['about_views'] == 1){                    $v['about_views'] = '是';                }                if($v['about_views'] == 2){                    $v['about_views'] = '否';                }                array_push($lists,$v);            }            echo ajax($lists, $info->toArray()['total'], 'Success');        } catch (\Exception $exception) {            return $exception->getMessage();        }    }    //删除图片    public function img_del(Request $request)    {        if (!$request->param('id')) {            //参数不存在修改失败            echo 2;        }        $info = Db::table('kit_about')->where('id', $request->param('id'))->find();        $del  = Db::table('kit_about')->where('id', $request->param('id'))->delete();        if ($del) {            unlink($_SERVER["DOCUMENT_ROOT"].$info['about_pic']);            echo 1; //删除成功        } else {            echo 2;//删除失败        }    }    //添加轮播图片页面显示    public function add_img()    {        return $this->fetch();    }    //上传图片 建议使用此方法当公共    public function upload()    {        // 获取表单上传文件 例如上传了001.jpg        $file = request()->file('file');        // 移动到框架应用根目录/uploads/ 目录下        $info = $file->move('./uploads');        if ($info) {            // 输出 20160820/42a79759f284b767dfcb2a0197904287.jpg            echo ajax('/uploads/' . $info->getSaveName());        } else {            return false;        }    }    //添加    public function add_insert(Request $request)    {        //取所有值 取值我是取所有只要前端传输的参数跟数据库一致        $arr = $request->param();        $arr['create_time'] = date('Y-m-d H:i:s', time());        $arr['update_time'] = date('Y-m-d H:i:s', time());        $info = Db::table('kit_about')->insert($arr);        if ($info) {            echo 1; //添加成功        } else {            echo 2; //添加失败        }    }    //修改    public function update_edit(Request $request)    {        if ($request->isPost()) {            //取所有值 取值我是取所有只要前端传输的参数跟数据库一致            $arr = $request->param();            if (!$request->param('about_pic')) {                //没有改图片，但是还要检测下 img是否存在 不然给有地址的赋值一个空就不好了                unset($arr['about_pic']);                $info = Db::table('kit_about')->where('id', $arr['id'])->update($arr);                if ($info) {                    echo 1; //修改成功                } else {                    echo 2; //修改失败                }            }else{                //修改图片，删除原来的图片                $del  = Db::table('kit_about')->where('id', $arr['id'])->find();                $info = Db::table('kit_about')->where('id', $arr['id'])->update($arr);                if ($info) {                    unlink($_SERVER["DOCUMENT_ROOT"].$del['about_pic']);                    echo 1; //修改成功                } else {                    echo 2; //修改失败                }            }        } else {            //取轮播图find一条在修改前显示的数据            $arr = Db::table('kit_about')->find($request->param('id'));            $this->assign('arr', $arr);            return $this->fetch();        }    }}